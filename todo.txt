TODO:
---------------------
-After scope tree, types and traits are loaded:
  -create list of subroutines in each scope
  -(LATER, NO POLYMORPHIC YET): do one pass through statements and instantiate polymorphic functions, then add them to scope (mangled)
  -scan in all statements in all subroutines (includes type checking expressions occurring in statements)
    -statements (including local var decls) are ordered
  -in var lookup, add arguments
  -in var lookup, add to non-static member subroutines the implicit "this" pointer

---------------------
  -Annotated AST refactor
    -Add middle-end Scope pointers to AST nodes to make traversing scope tree easier
      -BlockNT and BlockScope then point to each other
---------------------

LANGUAGE BUILT-IN MODULES (all must be fully cross-platform - "just work" with a clean Onyx installation):
  -Term (stdin/stdout/formatting/parsing, commands)
  -Sys (File I/O, filesystem, sockets, time)
  -Modern OpenGL, plus some nice utilties, like:
    -GLM-style math
    -OBJ model loading
    -Shader utilities
    -Mesh utilities (loading, saving, refinement, decimation)
  -Font rendering (full TrueType/Unicode support)
  -Input (keyboard, mouse, gamepad - portable across all machines)
  -UI (nice libUI interface, or something similar from scratch?)
  -OpenAL (audio)
  -zlib (compression)
  -Graphs (nice data structure, shortest path, finding cycles, reachability, etc)

