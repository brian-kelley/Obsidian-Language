---------------------
      TODO:
---------------------
-Unified name searching
  -Prevent name collision across multiple kinds of things (no overloading yet, but later)
-Need to modify grammar
-Expr12 might be a callable (first-class subroutines: functype/proctype as type for variable decl)
  -generalize CallNT parsing to be "Expr12 ( Args )"
-Will need to deal with methods in scopes 
-Modify Expression and Subroutine middle end
  -Call always parses as "Member ( Args )" (both expression and stmt)
  -Expr 12 can parse as just Member
  -In both cases, use Scope::lookup to find the actual root expression or subroutine
    -As statement, this is just one subroutine call
    -As expression, this can be an arbitrarily long chain of calls/indexing/member
      -This will be a chain of Expressions in middle end
-Actually make sure (in Subroutine) that the target of Assign statements in functions are in function scope (no side effects)
-Make sure alias types don't alias themselves
-C backend: need to track value lifetimes
  -NO SEGFAULTS
    -in debug (default for now) build, runtime bounds checking for arrays (segfaults impossible)
    -graceful program exit with error message for malloc failure 

------------------------------
  DATA DEPENDENCY TRACKING:
------------------------------
-Expressions are temporary unless they are variables, members or indices of variables
  -so data dependencies only matter for variables

--------------------------
   After core language:
--------------------------
LANGUAGE BUILT-IN MODULES (all must be fully cross-platform - "just work" with a clean Onyx installation):
  -Term (stdin/stdout/formatting/parsing, commands)
  -Sys (File I/O, filesystem, sockets, time)
  -Modern OpenGL, plus some nice utilties, like:
    -GLM-style math
    -OBJ model loading
    -Shader utilities
    -Mesh utilities (loading, saving, refinement, decimation)
  -Font rendering (full TrueType/Unicode support)
  -Input (keyboard, mouse, gamepad - portable across all machines)
    -Keyboard: want both events and state checking
  -UI (nice libUI interface, or something similar from scratch?)
  -OpenAL (audio)
  -zlib or something better (compression)
  -Graphs (nice data structure, shortest path, finding cycles, reachability, etc)

